"""
Django settings for EasyMonitor project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ah9+q5ro#jysx1ygr2*-0b3cz1sk)!=q+*(+g*l@zb0+@@$h(1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'EasyMonitor',
    'monitor_data',
    'monitor_web',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'EasyMonitor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EasyMonitor.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'easymonitor',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

AUTH_USER_MODEL = 'monitor_data.UserProfile'

LOGIN_URL = '/login.html'

# 提交数据API
DATA_API = 'http://10.10.30.93:8000/monitor_api/v1/data'
# 用于API认证的KEY
KEY = '299095cc-1330-11e5-b06a-a45e60bec08b'
# 用于API认证的请求头
AUTH_KEY_NAME = 'monitor-api-auth-key'

# 接收头信息的标识
MONITOR_AUTH_HEADER_NAME = 'HTTP_MONITOR_API_AUTH_KEY'
MONITOR_AUTH_KEY = '299095cc-1330-11e5-b06a-a45e60bec08b'
MONITOR_AUTH_TIME = 10

# 错误日志
ERROR_LOG_FILE = os.path.join(BASE_DIR, "logs", 'error.log')

# 运行日志
RUN_LOG_FILE = os.path.join(BASE_DIR, "logs", 'run.log')

# redis连接参数
REDIS_CONN = {
    'HOST': '10.10.30.93',
    'PORT': 6379,
    'PASSWD': '',
    'DB': 0
}

"""
code:
- 200 一切正常;
- 201 新资源已被创建;
- 204 资源删除成功;

- 400 错误的请求;
- 401 未认证;
- 403 未授权;
- 404 资源不存在;
- 422 不可指定的请求体;

- 500 标准服务器错误;

POST时，返回值：{'code': xx, 'message': 'xx'}
"""

# redis数据优化
DATA_OPTIMIZATION = {
    'latest': [0, 10080],  # 0表示不需要优化，7天的数据
    '10min': [600, 4320],  # 1个月的数据
    '30min': [1800, 4320],  # 3个月的数据
    '1hour': [3600, 8760]  # 1年的数据
}

# 所有的触发器被发布到这个通道
TRIGGER_CHAN = 'trigger_event_channel'

# 报警计数redis key
ALERT_COUNTER_REDIS_KEY = 'alert_counter'

# Trigger Watch PID文件存放路径
TRIGGER_WATCH_PID_FILE = os.path.join(BASE_DIR, 'logs', 'trigger_watch.pid')

# Host Alive PID文件存放路径
HOST_ALIVE_PID_FILE = os.path.join(BASE_DIR, 'logs', 'host_alive.pid')

# 邮件报警配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False
EMAIL_HOST = 'smtp.secflower.cn'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'warning@secflower.cn'
EMAIL_HOST_PASSWORD = 'warning@2018%0202'
DEFAULT_FROM_EMAIL = 'EasyMonitor<warning@secflower.cn>'

# cmdb api 主机名检测
CMDB_API_URL = 'http://10.10.30.93/cmdb_api/v1/monitor'
# 用于API认证的KEY
CMDB_AUTH_KEY = '299095cc-1330-11e5-b06a-a45e60bec08b'
# 用于API认证的请求头
CMDB_AUTH_KEY_NAME = 'cmdb-api-auth-key'


